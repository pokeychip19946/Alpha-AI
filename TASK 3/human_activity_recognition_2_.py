# -*- coding: utf-8 -*-
"""Human Activity recognition 2 .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xFcT8i_ZUcWd156JjCZdXzkzOc3vC7w9
"""

from collections import deque
import numpy as np
import cv2
class Parameters:
    def __init__(self):
        self.class_rec = open("model/kinetic.txt"
                            ).read().strip().split("\n")
        self.action_res = 'model/resnet-34_kinetics.onnx'
        self.vid_path = "test/example1.mp4"
        self.vid_duration = 16
        self.vid_size = 112


param = Parameters()
clickit = deque(maxlen=param.vid_duration)
net = cv2.dnn.readNet(model=param.action_res)
vc = cv2.VideoCapture(param.vid_path if param.vid_path else 0)

while True:
    (accessing, frame) = vc.read()
    if not accessing:
        print("no capture")
        break
    frame = cv2.resize(frame, dsize=(600, 450))
    clickit.append(frame)
    if len(clickit) < param.vid_duration:
        continue
    imageBlob = cv2.dnn.blobFromImages(clickit, 1.0,
                                       (param.vid_size,
                                        param.vid_size),
                                       (114.7748, 107.7354, 99.4750),
                                       swapRB=True, crop=True)

    imageBlob = np.transpose(imageBlob, (1, 0, 2, 3))
    imageBlob = np.expand_dims(imageBlob, axis=0)

    net.setInput(imageBlob)
    outputs = net.forward()
    label = param.class_rec[np.argmax(outputs)]
    cv2.rectangle(frame, (0, 0), (300, 40), (255, 255, 255), -1)
    cv2.putText(frame, label, (10, 25), cv2.FONT_ITALIC == 30,
                0.8, (0, 0, 0), 2)
    cv2.imshow("Human Activity Recognition", frame)

    key = cv2.waitKey(1) & 0xFF
    if key == ord("a"):
        break